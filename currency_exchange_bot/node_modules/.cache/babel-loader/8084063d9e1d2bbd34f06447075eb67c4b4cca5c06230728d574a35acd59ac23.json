{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\full-stack\\\\Currency-exchange-application\\\\currency_exchange_bot\\\\src\\\\components\\\\Layout\\\\components\\\\CurrencyBlock\\\\components\\\\ChartElement\\\\ChartElement2.component.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport Chart from 'react-apexcharts';\nimport s from \"./ChartElement.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChartElement2() {\n  _s();\n  const [series, setSeries] = useState([{\n    data: []\n  }]);\n  const [price, setPrice] = useState(0);\n  const [prevPrice, setPrevPrice] = useState(0);\n  const [priceTime, setPriceTime] = useState(null);\n  const stocksUrl = \"http://localhost:8080/getCsv\";\n  const chart = {\n    options: {\n      chart: {\n        type: 'candlestick',\n        height: 350\n      },\n      title: {\n        text: 'CandleStick Chart',\n        align: 'left'\n      },\n      xaxis: {\n        type: 'datetime'\n      },\n      yaxis: {\n        tooltip: {\n          enabled: true\n        }\n      }\n    }\n  };\n  const round = number => {\n    return number ? +number.toFixed(2) : null;\n  };\n  async function getStocks() {\n    const response = await fetch(stocksUrl);\n    return response.json();\n  }\n\n  //gme - Game Stop Crop\n  useEffect(() => {\n    let timeoutId;\n    async function getLatestPrice() {\n      try {\n        const data = await getStocks();\n        setPrevPrice(price);\n        setPrice(data.regularMarketPrice.toFixed(2));\n        setPriceTime(new Date(data.regularMarketTime * 1000));\n        const prices = timestamp.map((timestamp, index) => {\n          return {\n            x: new Date(timestamp * 1000),\n            // O, H, L, C\n            y: [data.open[index], data.high[index], data.low[index], data.close[index]].map(round)\n          };\n        });\n        setSeries([{\n          data: prices\n        }]);\n      } catch (error) {\n        console.log(error);\n      }\n      timeoutId = setTimeout(getLatestPrice, 10000);\n    }\n    getLatestPrice();\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, []);\n  const direction = useMemo(() => prevPrice < price ? \"./img/upArrow.png\" : prevPrice > price ? \"./img/downArrow.png\" : ' ', [prevPrice, price]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.chart,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"  $\", price, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: direction,\n        className: s.img,\n        alt: \"stock arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"  \", priceTime && priceTime.toLocaleTimeString(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      options: chart.options,\n      series: series,\n      type: \"candlestick\",\n      width: 500,\n      height: 320\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(ChartElement2, \"GfJNpGNs12cje4HSXDebjZ0qqc8=\");\n_c = ChartElement2;\nvar _c;\n$RefreshReg$(_c, \"ChartElement2\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","Chart","s","ChartElement2","series","setSeries","data","price","setPrice","prevPrice","setPrevPrice","priceTime","setPriceTime","stocksUrl","chart","options","type","height","title","text","align","xaxis","yaxis","tooltip","enabled","round","number","toFixed","getStocks","response","fetch","json","timeoutId","getLatestPrice","regularMarketPrice","Date","regularMarketTime","prices","timestamp","map","index","x","y","open","high","low","close","error","console","log","setTimeout","clearTimeout","direction","img","toLocaleTimeString"],"sources":["D:/Projects/full-stack/Currency-exchange-application/currency_exchange_bot/src/components/Layout/components/CurrencyBlock/components/ChartElement/ChartElement2.component.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState, useMemo } from \"react\";\r\nimport Chart from 'react-apexcharts';\r\nimport s from \"./ChartElement.module.css\"\r\n\r\nexport default function ChartElement2() {\r\n\r\n    const [series, setSeries] = useState([{\r\n        data: []\r\n    }])\r\n    const [price, setPrice] = useState(0)\r\n    const [prevPrice, setPrevPrice] = useState(0)\r\n    const [priceTime, setPriceTime] = useState(null)\r\n\r\n    const stocksUrl = \"http://localhost:8080/getCsv\";\r\n\r\n   \r\n\r\n    const chart = {\r\n        options: {\r\n            chart: {\r\n                type: 'candlestick',\r\n                height: 350\r\n            },\r\n            title: {\r\n                text: 'CandleStick Chart',\r\n                align: 'left'\r\n            },\r\n            xaxis: {\r\n                type: 'datetime'\r\n            },\r\n            yaxis: {\r\n                tooltip: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n    }\r\n\r\n    const round = (number) => {\r\n        return number ? +number.toFixed(2) : null;\r\n    }\r\n\r\n\r\n    async function getStocks() {\r\n        const response = await fetch(stocksUrl);\r\n        return response.json();\r\n\r\n    }\r\n\r\n    \r\n\r\n    //gme - Game Stop Crop\r\n    useEffect(() => {\r\n\r\n        let timeoutId;\r\n\r\n        async function getLatestPrice() {\r\n\r\n            try {\r\n\r\n\r\n                const data = await getStocks();\r\n                setPrevPrice(price);\r\n                setPrice(data.regularMarketPrice.toFixed(2));\r\n                setPriceTime(new Date(data.regularMarketTime * 1000));\r\n                const prices = timestamp.map((timestamp, index) => {\r\n\r\n                    return {\r\n                        x: new Date(timestamp * 1000),\r\n                        // O, H, L, C\r\n                        y: [data.open[index], data.high[index], data.low[index], data.close[index]].map(round)\r\n                    }\r\n                })\r\n                setSeries([{\r\n                    data: prices,\r\n                }])\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n            timeoutId = setTimeout(getLatestPrice, 10000);\r\n        }\r\n        getLatestPrice();\r\n\r\n        return () => {\r\n            clearTimeout(timeoutId);\r\n        }\r\n    }, [])\r\n\r\n    const direction = useMemo(() => prevPrice < price ? \"./img/upArrow.png\" : prevPrice > price ? \"./img/downArrow.png\" : ' ', [prevPrice, price]);\r\n\r\n    return (\r\n        <div className={s.chart}>\r\n            <p>  ${price}\r\n                <img src={direction} className={s.img} alt=\"stock arrow\" /> </p>\r\n            <p>  {priceTime && priceTime.toLocaleTimeString()} </p>\r\n\r\n            <Chart options={chart.options} series={series} type=\"candlestick\" width={500} height={320} />\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}