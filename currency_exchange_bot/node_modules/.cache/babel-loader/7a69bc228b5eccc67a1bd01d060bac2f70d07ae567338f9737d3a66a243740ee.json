{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\full-stack\\\\Currency-exchange-application\\\\currency_exchange_bot\\\\src\\\\components\\\\ChartBlock\\\\ChartBlock.component.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport s from \"./ChartBlock.module.css\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChartBlock(props) {\n  _s();\n  const [isActive, setActive] = React.useState(false);\n  const [series, setSeries] = useState([{\n    data: []\n  }]);\n  const [price, setPrice] = useState(0);\n  const [prevPrice, setPrevPrice] = useState(0);\n  const [priceTime, setPriceTime] = useState(null);\n  const stocksUrl = `http://localhost:8080/csv/${props.url}`;\n  const chart = {\n    options: {\n      chart: {\n        type: 'candlestick',\n        height: 350\n      },\n      title: {\n        text: 'CandleStick Chart',\n        align: 'left'\n      },\n      xaxis: {\n        type: 'datetime'\n      },\n      yaxis: {\n        tooltip: {\n          enabled: true\n        }\n      }\n    }\n  };\n  const round = number => {\n    return number ? +number.toFixed(2) : null;\n  };\n  async function getStocks() {\n    const response = await fetch(stocksUrl);\n    return response.json();\n  }\n\n  //gme - Game Stop Crop\n  useEffect(() => {\n    let timeoutId;\n    async function getLatestPrice() {\n      try {\n        const data = await getStocks();\n        setPrevPrice(price);\n        setPrice(data.regularMarketPrice.toFixed(2));\n        setPriceTime(new Date(data.regularMarketTime * 1000));\n        const prices = data.timestamp.map((timestamp, index) => {\n          return {\n            x: new Date(timestamp * 1000),\n            // O, H, L, C\n            y: [data.open[index], data.high[index], data.low[index], data.close[index]].map(round)\n          };\n        });\n        setSeries([{\n          data: prices\n        }]);\n      } catch (error) {\n        console.log(error);\n      }\n      timeoutId = setTimeout(getLatestPrice, 10000);\n    }\n    getLatestPrice();\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, []);\n  const direction = useMemo(() => prevPrice < price ? \"./img/upArrow.png\" : prevPrice > price ? \"./img/downArrow.png\" : ' ', [prevPrice, price]);\n  function Active() {\n    setActive(isActive => !isActive);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.root,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.buttons,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.buttonsBuySell,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.button,\n          children: \"BUY 0.09974\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.button,\n          children: \"SELL 0.90074\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Active,\n          className: s.button,\n          children: \"hide chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${s.chart} ${isActive ? `${s.hide}` : `${s.show}`}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.chart,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"  $\", price, /*#__PURE__*/_jsxDEV(\"img\", {\n            src: direction,\n            className: s.img,\n            alt: \"stock arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"  \", priceTime && priceTime.toLocaleTimeString(), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: chart.options,\n          series: series,\n          type: \"candlestick\",\n          width: 500,\n          height: 320\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(ChartBlock, \"x6R35c3OTX7eq5z/Fy1UYU8DYjE=\");\n_c = ChartBlock;\nvar _c;\n$RefreshReg$(_c, \"ChartBlock\");","map":{"version":3,"names":["React","s","useEffect","useState","useMemo","Chart","ChartBlock","props","isActive","setActive","series","setSeries","data","price","setPrice","prevPrice","setPrevPrice","priceTime","setPriceTime","stocksUrl","url","chart","options","type","height","title","text","align","xaxis","yaxis","tooltip","enabled","round","number","toFixed","getStocks","response","fetch","json","timeoutId","getLatestPrice","regularMarketPrice","Date","regularMarketTime","prices","timestamp","map","index","x","y","open","high","low","close","error","console","log","setTimeout","clearTimeout","direction","Active","root","buttons","buttonsBuySell","button","hide","show","img","toLocaleTimeString"],"sources":["D:/Projects/full-stack/Currency-exchange-application/currency_exchange_bot/src/components/ChartBlock/ChartBlock.component.js"],"sourcesContent":["import React from \"react\";\r\nimport s from \"./ChartBlock.module.css\";\r\nimport { useEffect, useState, useMemo } from \"react\";\r\nimport Chart from 'react-apexcharts';\r\n\r\n\r\nexport default function ChartBlock(props) {\r\n\r\n\r\n    const [isActive, setActive] = React.useState(false);\r\n\r\n    const [series, setSeries] = useState([{\r\n        data: []\r\n    }])\r\n    const [price, setPrice] = useState(0)\r\n    const [prevPrice, setPrevPrice] = useState(0)\r\n    const [priceTime, setPriceTime] = useState(null)\r\n\r\n    const stocksUrl = `http://localhost:8080/csv/${props.url}`;\r\n\r\n\r\n\r\n    const chart = {\r\n        options: {\r\n            chart: {\r\n                type: 'candlestick',\r\n                height: 350\r\n            },\r\n            title: {\r\n                text: 'CandleStick Chart',\r\n                align: 'left'\r\n            },\r\n            xaxis: {\r\n                type: 'datetime'\r\n            },\r\n            yaxis: {\r\n                tooltip: {\r\n                    enabled: true\r\n                }\r\n            }\r\n        },\r\n    }\r\n\r\n    const round = (number) => {\r\n        return number ? +number.toFixed(2) : null;\r\n    }\r\n\r\n\r\n    async function getStocks() {\r\n        const response = await fetch(stocksUrl);\r\n        return response.json();\r\n\r\n    }\r\n\r\n\r\n\r\n    //gme - Game Stop Crop\r\n    useEffect(() => {\r\n\r\n        let timeoutId;\r\n\r\n        async function getLatestPrice() {\r\n\r\n            try {\r\n\r\n\r\n                const data = await getStocks();\r\n                setPrevPrice(price);\r\n                setPrice(data.regularMarketPrice.toFixed(2));\r\n                setPriceTime(new Date(data.regularMarketTime * 1000));\r\n                const prices = data.timestamp.map((timestamp, index) => {\r\n\r\n                    return {\r\n                        x: new Date(timestamp * 1000),\r\n                        // O, H, L, C\r\n                        y: [data.open[index], data.high[index], data.low[index], data.close[index]].map(round)\r\n                    }\r\n                })\r\n                setSeries([{\r\n                    data: prices,\r\n                }])\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n            timeoutId = setTimeout(getLatestPrice, 10000);\r\n        }\r\n        getLatestPrice();\r\n\r\n        return () => {\r\n            clearTimeout(timeoutId);\r\n        }\r\n    }, [])\r\n\r\n    const direction = useMemo(() => prevPrice < price ? \"./img/upArrow.png\" : prevPrice > price ? \"./img/downArrow.png\" : ' ', [prevPrice, price]);\r\n\r\n    function Active() {\r\n        setActive(isActive => !isActive)\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div className={s.root}>\r\n            <p>{props.title}</p>\r\n            <div className={s.buttons}>\r\n                <div className={s.buttonsBuySell}>\r\n                    <button className={s.button}>BUY 0.09974</button>\r\n                    <button className={s.button}>SELL 0.90074</button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={Active} className={s.button} >hide chart</button>\r\n                </div>\r\n            </div>\r\n            <div className={`${s.chart} ${isActive ? `${s.hide}` : `${s.show}`}`}>\r\n                <div className={s.chart}>\r\n                    <p>  ${price}\r\n                        <img src={direction} className={s.img} alt=\"stock arrow\" /> </p>\r\n                    <p>  {priceTime && priceTime.toLocaleTimeString()} </p>\r\n\r\n                    <Chart options={chart.options} series={series} type=\"candlestick\" width={500} height={320} />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,yBAAyB;AACvC,SAASC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,kBAAkB;AAAC;AAGrC,eAAe,SAASC,UAAU,CAACC,KAAK,EAAE;EAAA;EAGtC,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGT,KAAK,CAACG,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC;IAClCS,IAAI,EAAE;EACV,CAAC,CAAC,CAAC;EACH,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMgB,SAAS,GAAI,6BAA4BZ,KAAK,CAACa,GAAI,EAAC;EAI1D,MAAMC,KAAK,GAAG;IACVC,OAAO,EAAE;MACLD,KAAK,EAAE;QACHE,IAAI,EAAE,aAAa;QACnBC,MAAM,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACHC,IAAI,EAAE,mBAAmB;QACzBC,KAAK,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QACHL,IAAI,EAAE;MACV,CAAC;MACDM,KAAK,EAAE;QACHC,OAAO,EAAE;UACLC,OAAO,EAAE;QACb;MACJ;IACJ;EACJ,CAAC;EAED,MAAMC,KAAK,GAAIC,MAAM,IAAK;IACtB,OAAOA,MAAM,GAAG,CAACA,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI;EAC7C,CAAC;EAGD,eAAeC,SAAS,GAAG;IACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAClB,SAAS,CAAC;IACvC,OAAOiB,QAAQ,CAACE,IAAI,EAAE;EAE1B;;EAIA;EACApC,SAAS,CAAC,MAAM;IAEZ,IAAIqC,SAAS;IAEb,eAAeC,cAAc,GAAG;MAE5B,IAAI;QAGA,MAAM5B,IAAI,GAAG,MAAMuB,SAAS,EAAE;QAC9BnB,YAAY,CAACH,KAAK,CAAC;QACnBC,QAAQ,CAACF,IAAI,CAAC6B,kBAAkB,CAACP,OAAO,CAAC,CAAC,CAAC,CAAC;QAC5ChB,YAAY,CAAC,IAAIwB,IAAI,CAAC9B,IAAI,CAAC+B,iBAAiB,GAAG,IAAI,CAAC,CAAC;QACrD,MAAMC,MAAM,GAAGhC,IAAI,CAACiC,SAAS,CAACC,GAAG,CAAC,CAACD,SAAS,EAAEE,KAAK,KAAK;UAEpD,OAAO;YACHC,CAAC,EAAE,IAAIN,IAAI,CAACG,SAAS,GAAG,IAAI,CAAC;YAC7B;YACAI,CAAC,EAAE,CAACrC,IAAI,CAACsC,IAAI,CAACH,KAAK,CAAC,EAAEnC,IAAI,CAACuC,IAAI,CAACJ,KAAK,CAAC,EAAEnC,IAAI,CAACwC,GAAG,CAACL,KAAK,CAAC,EAAEnC,IAAI,CAACyC,KAAK,CAACN,KAAK,CAAC,CAAC,CAACD,GAAG,CAACd,KAAK;UACzF,CAAC;QACL,CAAC,CAAC;QACFrB,SAAS,CAAC,CAAC;UACPC,IAAI,EAAEgC;QACV,CAAC,CAAC,CAAC;MAEP,CAAC,CAAC,OAAOU,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;MAEAf,SAAS,GAAGkB,UAAU,CAACjB,cAAc,EAAE,KAAK,CAAC;IACjD;IACAA,cAAc,EAAE;IAEhB,OAAO,MAAM;MACTkB,YAAY,CAACnB,SAAS,CAAC;IAC3B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoB,SAAS,GAAGvD,OAAO,CAAC,MAAMW,SAAS,GAAGF,KAAK,GAAG,mBAAmB,GAAGE,SAAS,GAAGF,KAAK,GAAG,qBAAqB,GAAG,GAAG,EAAE,CAACE,SAAS,EAAEF,KAAK,CAAC,CAAC;EAE9I,SAAS+C,MAAM,GAAG;IACdnD,SAAS,CAACD,QAAQ,IAAI,CAACA,QAAQ,CAAC;EACpC;EAEA,oBAGI;IAAK,SAAS,EAAEP,CAAC,CAAC4D,IAAK;IAAA,wBACnB;MAAA,UAAItD,KAAK,CAACkB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACpB;MAAK,SAAS,EAAExB,CAAC,CAAC6D,OAAQ;MAAA,wBACtB;QAAK,SAAS,EAAE7D,CAAC,CAAC8D,cAAe;QAAA,wBAC7B;UAAQ,SAAS,EAAE9D,CAAC,CAAC+D,MAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAqB,eACjD;UAAQ,SAAS,EAAE/D,CAAC,CAAC+D,MAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB;MAAA;QAAA;QAAA;QAAA;MAAA,QAChD,eACN;QAAA,uBACI;UAAQ,OAAO,EAAEJ,MAAO;UAAC,SAAS,EAAE3D,CAAC,CAAC+D,MAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAqB;QAAA;QAAA;QAAA;MAAA,QAChE;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAK,SAAS,EAAG,GAAE/D,CAAC,CAACoB,KAAM,IAAGb,QAAQ,GAAI,GAAEP,CAAC,CAACgE,IAAK,EAAC,GAAI,GAAEhE,CAAC,CAACiE,IAAK,EAAE,EAAE;MAAA,uBACjE;QAAK,SAAS,EAAEjE,CAAC,CAACoB,KAAM;QAAA,wBACpB;UAAA,kBAAOR,KAAK,eACR;YAAK,GAAG,EAAE8C,SAAU;YAAC,SAAS,EAAE1D,CAAC,CAACkE,GAAI;YAAC,GAAG,EAAC;UAAa;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eACpE;UAAA,iBAAMlD,SAAS,IAAIA,SAAS,CAACmD,kBAAkB,EAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eAEvD,QAAC,KAAK;UAAC,OAAO,EAAE/C,KAAK,CAACC,OAAQ;UAAC,MAAM,EAAEZ,MAAO;UAAC,IAAI,EAAC,aAAa;UAAC,KAAK,EAAE,GAAI;UAAC,MAAM,EAAE;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IAC3F;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEd;AAAC,GAzHuBJ,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}